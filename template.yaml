AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  indoor-iot-backend
  SAM Template for indoor-iot-backend

Parameters:
  APIName:
    Type: String
    Description: "Name of the API, for generate names for resources"
    MinLength: 3
    MaxLength: 20
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9_]*$'

  APIKey:
    Type: String
    Description: The API Key for the mapping app
    MinLength: 32
    MaxLength: 32
    AllowedPattern: '^[a-f0-9]*$'

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Resources:
  LocalizationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: LocalizationFunction
      Handler: localization.App::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Events:
        DynamoDBEvent:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt IntermediateLocationsQueue.StreamArn
            BatchSize: 10
            StartingPosition: TRIM_HORIZON

  IntermediateLocationsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: IntermediateLocationsFunction
      Handler: intermediatelocations.App::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Events:
        DynamoDBEvent:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt TagsHistoricalTable.StreamArn
            BatchSize: 10
            StartingPosition: TRIM_HORIZON

  TagsHistoricalTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: epc
          AttributeType: S
      KeySchema: 
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: epc
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE
        
  UpdaterHistoricalTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema: 
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  IntermediateLocationsQueue:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: epc
          AttributeType: S
      KeySchema: 
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: epc
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  LocalizedTagsTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: epc
          AttributeType: S    
      KeySchema: 
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: epc
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  
  TagsHistoricalDBRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${APIName}-tags-historical-role
      ManagedPolicyArns:
        - Ref: TagsHistoricalDBPolicy
      AssumeRolePolicyDocument:
        Version: 2022-1-14
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
    DependsOn:
      -   TagsHistoricalDBPolicy

  TagsHistoricalDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy to allow AWS AppSync to access the tables created by this template.
      Path: /tags_historical/
      PolicyDocument:
        Version: 2022-1-14
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:UpdateItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource: !Join [ "", [!GetAtt TagsHistoricalTable.Arn, "*"]]
  
  TagsHistoricalApi:
    Type: "AWS::AppSync::GraphQLApi"
    Description: "The GraphQL API for sending historical tag measurements"
    Properties:
      AuthenticationType: "API_KEY"
      Name: !Sub ${APIName}-tags-historical-api

  TagsHistoricalApiKey:
    Type: "AWS::AppSync::ApiKey"
    Properties:
      Description: "TagsHistoricalApi Key"
      Expires: 1564608763
      ApiId: !GetAtt TagsHistoricalApi.ApiId
      

  TagsHistoricalSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt TagsHistoricalApi.ApiId
      Definition: |
        type Measurement {
          epc: String!,
          timestamp: String!,
          user_id: String!,
          area_id: Int!,
          channel_estimates: [[Float!]!]!
        }

        type Mutation {
          addMeasurement(
            epc: String!,
            timestamp: String!,
            user_id: String!,
            area_id: Int!,
            channel_estimates: [[Float!]!]!
            ): Measurement

        }

        type Schema {
          mutation: Mutation
        }

  TagsHistoricalDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: !GetAtt TagsHistoricalApi.ApiId
      Name: !Sub ${APIName}_tags_historical_table
      Description: "The historical tag Table AppSync Data Source"
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt TagsHistoricalDBRole.Arn
      DynamoDBConfig:
        TableName: !Ref TagsHistoricalTable
        AwsRegion: !Sub ${AWS::Region}


  addMeasurementResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: TagsHistoricalSchema
    Properties:
      ApiId: !GetAtt TagsHistoricalApi.ApiId
      TypeName: Mutation
      FieldName: addMeasurement
      DataSourceName: !GetAtt TagsHistoricalDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2022-01-18",
          "operation": "PutItem",
          "key": {
            "epc": $util.dynamodb.toDynamoDBJson($ctx.args.epc),
            "user_id": $util.dynamodb.toDynamoDBJson($ctx.args.device_id)
          },
          "attributeValues": {
            "area_id": $util.dynamodb.toDynamoDBJson($ctx.args.area_id),
            "timestamp": $util.dynamodb.toDynamoDBJson($ctx.args.timestamp),
            "channel_estimates": $util.dynamodb.toDynamoDBJson($ctx.args.channel_estimates)
          }
        }
      ResponseMappingTemplate: "$util.toJson($ctx.result)"

  UpdaterHistoricalDBRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${APIName}-updater-historical-role
      ManagedPolicyArns:
        - Ref: UpdaterHistoricalDBPolicy
      AssumeRolePolicyDocument:
        Version: 2022-1-14
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
    DependsOn:
      -   UpdaterHistoricalDBPolicy

  UpdaterHistoricalDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed policy to allow AWS AppSync to access the tables created by this template.
      Path: /updater_historical/
      PolicyDocument:
        Version: 2022-1-14
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:UpdateItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource: !Join [ "", [!GetAtt UpdaterHistoricalTable.Arn, "*"]]
  
  UpdaterHistoricalApi:
    Type: "AWS::AppSync::GraphQLApi"
    Description: "The GraphQL API for sending historical updater location"
    Properties:
      AuthenticationType: "API_KEY"
      Name: !Sub ${APIName}-updater-historical-api

  UpdaterHistoricalApiKey:
    Type: "AWS::AppSync::ApiKey"
    Properties:
      Description: "UpdaterHistoricalApi Key"
      Expires: 1564608763
      ApiId: !GetAtt UpdaterHistoricalApi.ApiId
      

  UpdaterHistoricalSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt UpdaterHistoricalApi.ApiId
      Definition: |
        type Location {
          timestamp: String!,
          user_id: String!,
          area_id: Int!,
          pose_x: Float!,
          pose_y: Float!,
          pose_z: Float!,
          pose_qx: Float!,
          pose_qy: Float!,
          pose_qz: Float!,
          pose_qw: Float!
        }

        type Mutation {
          addLocation(
            timestamp: String!,
            user_id: String!,
            area_id: Int!,
            pose_x: Float!,
            pose_y: Float!,
            pose_z: Float!,
            pose_qx: Float!,
            pose_qy: Float!,
            pose_qz: Float!,
            pose_qw: Float!): Location

        }

        type Schema {
          mutation: Mutation
        }

  UpdaterHistoricalDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: !GetAtt UpdaterHistoricalApi.ApiId
      Name: !Sub ${APIName}_updater_historical_table
      Description: "The historical updater location Table AppSync Data Source"
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt UpdaterHistoricalDBRole.Arn
      DynamoDBConfig:
        TableName: !Ref UpdaterHistoricalTable
        AwsRegion: !Sub ${AWS::Region}


  addLocationResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: UpdaterHistoricalSchema
    Properties:
      ApiId: !GetAtt UpdaterHistoricalApi.ApiId
      TypeName: Mutation
      FieldName: addLocation
      DataSourceName: !GetAtt UpdaterHistoricalDataSource.Name
      RequestMappingTemplate: |
        {
          "version": "2022-01-18",
          "operation": "PutItem",
          "key": {
            "timestamp": $util.dynamodb.toDynamoDBJson($ctx.args.timestamp),
            "user_id": $util.dynamodb.toDynamoDBJson($ctx.args.device_id)
          },
          "attributeValues": {
            "area_id": $util.dynamodb.toDynamoDBJson($ctx.args.area_id),
            "pose_x": $util.dynamodb.toDynamoDBJson($ctx.args.pose.x),
            "pose_y": $util.dynamodb.toDynamoDBJson($ctx.args.pose.y),
            "pose_z": $util.dynamodb.toDynamoDBJson($ctx.args.pose.z),
            "pose_qx": $util.dynamodb.toDynamoDBJson($ctx.args.pose.qx),
            "pose_qy": $util.dynamodb.toDynamoDBJson($ctx.args.pose.qy),
            "pose_qz": $util.dynamodb.toDynamoDBJson($ctx.args.pose.qz),
            "pose_qw": $util.dynamodb.toDynamoDBJson($ctx.args.pose.qw),
          }
        }
      ResponseMappingTemplate: "$util.toJson($ctx.result)"




  
  




Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

  TagsHistoricalTableName:
    Description: The name of the TagsHistoricalTable
    Value: !Ref TagsHistoricalTable

  TagsHistoricalApiEndpoint:
    Description: The URL to the TagsHistoricalApi Endpoint
    Value: !GetAtt TagsHistoricalApi.GraphQLUrl

  TagsHistoricalApiId:
    Description: The API ID of the TagsHistoricalApi
    Value: !GetAtt TagsHistoricalApi.ApiId

  UpdaterHistoricalApiEndpoint:
    Description: The URL to the UpdaterHistoricalApi Endpoint
    Value: !GetAtt UpdaterHistoricalApi.GraphQLUrl

  UpdaterHistoricalApiId:
    Description: The API ID of the UpdaterHistoricalApi
    Value: !GetAtt UpdaterHistoricalApi.ApiId
